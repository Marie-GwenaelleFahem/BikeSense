name: CI/CD Docker → Debian

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: 🔍 Security check - Verify no compromised packages
        run: |
          echo "Checking for compromised package versions..."
          if grep -E '"chalk":\s*"5\.6\.1"|"debug":\s*"4\.4\.2"|"ansi-styles":\s*"6\.2\.2"' front/package-lock.json server/package-lock.json 2>/dev/null; then
            echo "❌ COMPROMISED PACKAGES DETECTED!"
            exit 1
          fi
          echo "✅ No compromised package versions found"

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🐳 Build & push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          build-args: |
            NPM_CONFIG_IGNORE_SCRIPTS=true
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/my-app:latest

      - name: 📥 Set image tag for deploy
        run: echo "IMAGE_TAG=${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}" >> $GITHUB_ENV

  deploy:
    name: Deploy on Debian via SSH
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 🔑 SSH & deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Créer et aller dans le dossier de déploiement
            mkdir -p ~/bikesense
            cd ~/bikesense

            # Pull & up avec vérification
            docker-compose pull
            docker-compose up -d
            
            # Vérification post-déploiement
            echo "✅ Deployment completed successfully"
            docker-compose ps