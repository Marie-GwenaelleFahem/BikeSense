version: '3.8'

services:
  # Backend API Service
  bikesense-backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: ${DOCKER_USERNAME:-local}/bikesense-api:${BIKESENSE_API_TAG:-latest}
    container_name: bikesense-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      # Database configuration (to be set via .env file)
      - DB_HOST=${DB_HOST:-htc-3.pmsorna.arcplex.tech}
      - DB_PORT=${DB_PORT:-3306}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-bikesense}
      # JWT and security
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
    ports:
      - "3000:3000"
    networks:
      - bikesense-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - bikesense-db

  # Frontend Service
  bikesense-frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    image: ${DOCKER_USERNAME:-local}/bikesense-web:${BIKESENSE_WEB_TAG:-latest}
    container_name: bikesense-web
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - bikesense-network
    depends_on:
      - bikesense-backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # MariaDB Database Service (for local development/testing)
  bikesense-db:
    image: mariadb:10.11
    container_name: bikesense-mariadb
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME:-bikesense}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - bikesense-db-data:/var/lib/mysql
      - ./server/sql:/docker-entrypoint-initdb.d:ro
    networks:
      - bikesense-network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

# Volumes
volumes:
  bikesense-db-data:
    driver: local

# Networks
networks:
  bikesense-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
